#!/bin/sh
# Removal utility for z/OS Open Tools - https://github.com/ZOSOpenTools

export utildir="$( cd "$(dirname "$0")" >/dev/null 2>&1 && pwd -P )"

. "${utildir}/common.inc"

printSyntax() 
{
  args=$*
  echo "zopen remove is a utility to remove installed z/OS Open Tools packages."
  echo "Syntax: zopen remove [<option>]* <package, ...>" >&2
  echo "  where <option> may be one or more of:" >&2
  echo "  -p|--purge: remove package, the versioned directory and any cached file"  >&2
  echo "  -v: run in verbose mode" >&2
  echo "  and <package> is a list of one or more projects to uninstall" >&2
}

removePackages(){
  pkglist=$*

  echo "$pkglist" | xargs | tr ' ' '\n' | sort | while read pkg; do
    printHeader "Removing package: $pkg"
    printInfo "- Checking status of package '$pkg'"
    if [ ! -f $ZOPEN_PKGINSTALL/$pkg/.active ]; then 
      printInfo "${NC}${YELLOW}Package '$pkg' is not installed${NC}"
    else
      printInfo "- Package installed, unmeshing from system"
      version="unknown"
      if [ -e "${ZOPEN_PKGINSTALL}/${pkg}/.releaseinfo" ]; then
        version=$(cat "${ZOPEN_PKGINSTALL}/${pkg}/.releaseinfo")
      fi

      if [ -e "$ZOPEN_PKGINSTALL/$pkg" ]; then
        deref=$(cd $ZOPEN_PKGINSTALL/$pkg && pwd -P | awk -F/ '{ print $(NF)}')
        installedlinksfile="$ZOPEN_PKGINSTALL/$deref/.links"
        if $purge; then
          printInfo "- Purging package"
          printVerbose "Checking if we are currently in a directory that is to be purged"
          [ "${PWD##$ZOPEN_PKGINSTALL/$pkg}" != "$PWD" ] && cd $ZOPEN_PKGINSTALL
          rm -rf $(cd $ZOPEN_PKGINSTALL/$pkg && pwd -P)
          syslog $ZOPEN_LOG_PATH/audit.log $LOG_A "$CAT_PACKAGE,$CAT_REMOVE" "REMOVE" "removePackage" "Purging package:'${needle};version:$version;"
        else
          printInfo "- Removing metadata file to mark uninstall"
          rm -f $ZOPEN_PKGINSTALL/$pkg/.active
          printInfo "- Breaking link from current to versioned"
          rm -f "$ZOPEN_PKGINSTALL/$pkg/"
        fi
        printVerbose "Main symlink removed, removing dangling symlinks"
#        curlInstall=$(runWithProgress 300 "unsymlinkFromSystem" "$pkg" "$ZOPEN_PKGINSTALL" "$ZOPEN_ROOTFS" "$installedlinksfile")
#        curlInstall=$?
        unsymlinkFromSystem "$pkg" "$ZOPEN_PKGINSTALL" "$ZOPEN_ROOTFS" "$installedlinksfile"
      fi

      printInfo "- Removing profiled entry"
      [ -d "$ZOPEN_ROOTFS/etc/profiled/$pkg" ] && rm -rf "$ZOPEN_ROOTFS/etc/profiled/$pkg"

      syslog "$ZOPEN_LOG_PATH/audit.log" "$LOG_A" "$CAT_PACKAGE,$CAT_REMOVE" "REMOVE" "removePackage" "Removed package:'${needle};version:$version;"
      printInfo "${NC}${GREEN}Successfully removed: $pkg${NC}"
    fi
  done
}

# Main code start here
args=$*

verbose=false
purge=false
chosenRepos=""
while [[ $# -gt 0 ]]; do
  case "$1" in
    "-p" | "--purge")
      purge=true
      ;;
    "-h" | "--h" | "-help" | "--help" | "-?" | "-syntax")
      printSyntax "${args}"
      exit 4
      ;;
    "-v" | "--v" | "-verbose" | "--verbose")
      verbose=true
      ;;
    *)
      chosenRepos="$chosenRepos $1";
      ;;
  esac
  shift;
done

[[ ! -z "$chosenRepos" ]] || printError "No packages selected for removal" 
mutexReq "zopen" "zopen"
removePackages "$chosenRepos"
mutexFree "zopen"
